/*
Given 5 integers, classify each as stable(all digits occur same number of times) or unstable (digit frequencies differ).
Return the result of sum of stable numbers - sum of unstable numbers.
Input: 12, 1313, 122, 678, 898
Output: 983
*/

class demo{
public int findpassword(int input1,input input2,int input3, int input4,int input5){
 int[] value = new int[]{input1,input2,input3,input4,input5};
    int unstable = 0;
    int stable = 0;
    for(int i=0;i<5;i++){
        int count[] = new int[10];
        int Num = value[i];
        int temp = Num;
        while(temp>0){
            int digit = temp%10;
            count[digit]++;
            temp/=10;
        }
        boolean isstable = true;
        int freq =0;
        for(int j=0;j<10;j++){
            if(count[j]>0){
              if(freq == 0){
                  freq = count[j];
              }
              else if(count[j]!=freq){
                  isstable = false;
                  break;
              }
            }  
        }
        if(isstable == true){
            stable += value[i];
        }
        else{
            unstable +=value[i];
        }
    }
    return stable - unstable;
	}
}
